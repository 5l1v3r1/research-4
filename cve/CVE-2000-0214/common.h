/* 
 * $Id: common.h,v 1.1 2010-11-17 16:12:33-02 nbrito Exp $ 
 */

 /* ------------------x------------------x------------------x------------------
 * Author: Nelson Brito <nbrito[at]sekure[dot]org>
 *
 * Copyright (c) 2000-2010 Nelson Brito. All rights reserved worldwide.
 *
 * This file is part of Penetration Test Toolkit.
 * ------------------x------------------x------------------x------------------
            FTPx FTP Explorer Weak Password Encryption Vulnerability
                                  Release 2.00

                      Copyright (c) 2000-2010 Nelson Brito
                               All Rights Reserved
   ------------------x------------------x------------------x------------------ */
#ifndef __COMMON_H
#define __COMMON_H 1
/* @AUTHOR:	  Nelson Brito
   @REVISION: February 25th, 2000
			  October  20th, 2008
			  November 17th, 2010 */
#if    (MAIN_C__) || (OPTIONS_C__)
static char * program   = "FTPx";
static char * author    = "Nelson Brito";
#	if    (OPTIONS_C__)
static char * email     = "nbrito[at]sekure[dot]org";
#	endif /* (OPTIONS_C__) */
#endif  /* (MAIN_C__) || (OPTIONS_C__) */

#if     !(__MAJOR_VERSION) && !(__MINOR_VERSION)
	/* XXX - Internal declarations. */
#	define __MAJOR_VERSION "2"
#	ifdef  __CYGWIN__
		/* XXX - Internal declarations. */
#		define __MINOR_VERSION "12-Cygwin"
#	elif   __linux__
		/* XXX - Internal declarations. */
#		define __MINOR_VERSION "12-Linux"
#	elif   _WIN32
		/* XXX - Internal declarations. */
#		define __MINOR_VERSION "12-Win32"
#	elif   __APPLE__
		/* XXX - Internal declarations. */
#		define __MINOR_VERSION "12-OSX"
#	else   /* !__CYGWIN__ && !__linux__ && !_WIN32 */
		/* XXX - External declarations. */
#		error "Sorry! The eng program was only tested under Linux, Cygwin and Win32!"
#	endif  /* __CYGWIN__ || __linux__ || _WIN32 */
#endif  /* !(__MAJOR_VERSION) && !(__MINOR_VERSION) */

#ifdef   _WIN32
	/* XXX - Internal declarations. */
#	include <windows.h>
#	ifdef   OPTIONS_C__
		/* XXX - Internal declarations. */
#		include "getopt.h"
		extern int    optind;
		extern char * optarg;
#	endif   /* OPTIONS_C__ */
#else    /* _WIN32 */
	/* XXX - External declarations. */
#	include <unistd.h>
#	ifdef   OPTIONS_C__
		/* XXX - Internal declarations. */
#		include <getopt.h>
#	endif   /* OPTIONS_C__ */
#endif   /* _WIN32 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>

#ifdef   _WIN32
	/* XXX - Internal declarations. */
#	ifndef  UNICODE 
		/* XXX - Internal declarations. */
#		define  UNICODE 1
#	endif   /* UNICODE */
#	if      _MSC_VER > 1000
		/* XXX - Internal declarations. */
#		pragma hdrstop 
#		pragma once
#	endif   /* _MSC_VER > 1000 */
#	pragma  comment(lib, "ws2_32")
#else    /* _WIN32 */
	/* XXX - External declarations. */
#	define TRUE 1
#	define FALSE 0
#endif  /* _WIN32 */

#ifdef	__cplusplus
	/* XXX - Internal declarations. */
	extern "C" {
#endif

/* Command Line Interface options. */
struct options{
	unsigned int l;					/* password length                */
#define DEFAULT_LENGHT		0x08	/* default password length        */
	unsigned int r;					/* ratio to apply                 */
#define DEFAULT_RATIO		0X03	/* default ratio to apply         */
	unsigned int i;					/* initial incrementation         */
#define DEFAULT_INCREMENT	0x09	/* default initial incrementation */
};

/* Prototype to calculate the password. */
extern void ftpx(unsigned int, unsigned int, struct options);

/* Prototype to process options from Command Line Interface. */
extern struct options process_options(int, char **);

/* Prototype to display usage/help message. */
extern void usage(char *, char *, char *);

#ifdef	__cplusplus
	}
#endif

#endif  /* __COMMON_H */
