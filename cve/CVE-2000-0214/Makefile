##
# $Id: Makefile,v 1.1 2010-11-17 16:12:33-02 nbrito Exp $
##

###########################################################################
##                                                                       ##
##       FTPx FTP Explorer Weak Password Encryption Vulnerability        ##
##                            Release 2.00                               ##
##                                                                       ##
###########################################################################
# Author:         Nelson Brito <nbrito@sekure.org>                        #
# First Release:  February 25th, 2000                                     #
# Review Release: January  9th, 2012                                      #
# Supported OS:   N/A                                                     #
###########################################################################
# Copyright(c) 2000-2012 Nelson Brito. All rights reserved worldwide.     #
#                                                                         #
# This program is free software: you can redistribute it and/or modify it #
# under  the terms of the GNU General Public License  as published by the #
# Free Software Foundation,  either version 3 of the License, or (at your #
# option) any later version.                                              #
#                                                                         #
# This program  is  distributed in  the hope that  it will be useful, but #
# WITHOUT  ANY  WARRANTY;   without   even  the   implied   warranty   of #
# MERCHANTABILITY  or  FITNESS  FOR  A  PARTICULAR  PURPOSE.  See the GNU #
# General Public License for more details.                                #
#                                                                         #
# You  should have  received a copy of the  GNU  General  Public  License #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.   #
###########################################################################

#
## GLOBAL PARAMETERS
##
## Global parameters used by GCC.
## Any new global parameter should be added in this section.
#
BIN             = /bin
PREFIX          = /usr
INCLUDE         = include
INCLUDES        = /usr/include
SOURCES         = .
OBJECTS         = objects
RELEASE         = release
MODULES         = modules
USRBIN          = $(PREFIX)/bin
USRSBIN         = $(PREFIX)/sbin
MANDIR          = $(PREFIX)/share/man/man8
CC              = $(USRBIN)/gcc
MAKEDEPEND      = $(USRBIN)/makedepend
RM              = $(BIN)/rm -f
MKDIR           = $(BIN)/mkdir
STRIP           = $(USRBIN)/strip
UPX             = $(USRBIN)/upx
OSYSTEM         = $(shell uname)
BUILD_PLATFORM  = generic
SUBARCH        := $(shell uname -m | sed -e s/i.86/i386/)
ARCH	       ?= $(SUBARCH)
BUILD_PLATFORM := $(ARCH)
#ifeq ($(ARCH),i386)
#	BUILD_PLATFORM := 32-bit
#endif
#ifeq ($(ARCH),x86_64)
#	BUILD_PLATFORM := 64-bit
#endif


#
## GLOBAL COMPILER FLAGS
##
## Global compiler flags used by GCC.
## Any new compiler flag should be added in this section.
#
# Setting the language C.
CFLAGS         += -xc
#
# Setting warning messages.
CFLAGS         += -Wall
#CFLAGS         += -Wextra
#CFLAGS         += -Werror
#
# Tuning parameters to better optimization.
CFLAGS         += -O3
#ifeq ($(ARCH),x86_64)
#	CFLAGS         += -arch x86_64
#endif
#ifeq ($(ARCH),i386)
#	CFLAGS         += -arch i386
#endif
#CFLAGS         += -march=core2
#CFLAGS         += -mtune=core2


#
## GLOBAL DEFINE FLAGS
##
## Global define flags used by GCC.
## Any new define flag should be added in this section.
#
# Setting INCLUDE.
DFLAGS         += -I$(INCLUDE)
DFLAGS         += -I$(INCLUDES)


#
## GLOBAL LINKER FLAGS
##
## Global linker flags used by GCC.
## Any new linker flag should be added in this section.
#LFLAGS         += -static
LFLAGS         += -o


#
## GLOBAL INSTALLER FLAGS
##
## Global installer flags used by INSTALL.
## Any new installer flag should be added in this section.
#
INSTALL        += $(USRBIN)/install
#
# Setting install options.
IFLAGS         += -c
IFLAGS         += -p
#
# Setting install permissions.
IPERMS         += -g bin
IPERMS         += -o root
#
# The following permissions requires 'sudo'.
IPERMS         += -m 00700
#
# The following permissions does not require 'sudo'.
#IPERMS         += -m 04755


#
## GLOBAL PROGRAM
#
PROGRAM         = ftpx


# XXX WARNING XXX WARNING XXX WARNING XXX
##
## Touch nothing beyond this point!!!
##
# XXX WARNING XXX WARNING XXX WARNING XXX
.SUFFIXES: .c

$(OBJECTS)/%.o: $(SOURCES)/%.c
	$(CC) $(CFLAGS) -c $< $(DFLAGS) -o $@
$(OBJECTS)/%.o: $(MODULES)/%.c
	$(CC) $(CFLAGS) -c $< $(DFLAGS) -o $@

CORE_FILES     := $(wildcard $(SOURCES)/*.c)
PROTO_FILES    := $(wildcard $(MODULES)/*.c)

SOURCE = $(CORE_FILES) $(PROTO_FILES)
OBJECT = $(addprefix $(OBJECTS)/, $(notdir $(addsuffix .o, $(basename $(SOURCE)))))

$(RELEASE)/$(PROGRAM): $(OBJECT)
	$(CC) $(LFLAGS) $@ $(OBJECT)
#	@if [ -f $(STRIP) ] && [ -e $(STRIP) ]; then\
#		$(STRIP) -s $@ 1>&2 > /dev/null;\
#	fi
#	@if [ -f $(UPX) ] && [ -e $(UPX) ]; then\
#		$(UPX) $(UFLAGS) $@ 1>&2 > /dev/null;\
#	fi

depend:
	$(MAKEDEPEND) $(DFLAGS) -Y $(SOURCE)

install: $(RELEASE)/$(PROGRAM)
	@if [ ! -d $(USRSBIN) ]; then\
		$(MKDIR) $(USRSBIN);\
	fi
	$(INSTALL) $(IFLAGS) $< $(IPERMS) $(USRSBIN)

uninstall: $(RELEASE)/$(PROGRAM)
	@if [ -f $(USRSBIN)/$(PROGRAM) ] && [ -e $(USRSBIN)/$(PROGRAM) ]; then\
		 $(RM) $(USRSBIN)/$(PROGRAM);\
	fi
	
clean:
	for file in $(OBJECT) $(RELEASE)/$(PROGRAM) *~ .*.swp core; do\
		if [ -f $$file ]; then\
			$(RM) $$file 1>&2 > /dev/null;\
		fi;\
	done
